// Code generated by protoc-gen-go.
// source: upstream.proto
// DO NOT EDIT!

package seprotocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LobbyJoinRequest struct {
	GameVersion string `protobuf:"bytes,1,opt,name=gameVersion" json:"gameVersion,omitempty"`
	ShipID      string `protobuf:"bytes,2,opt,name=shipID" json:"shipID,omitempty"`
	GameID      string `protobuf:"bytes,3,opt,name=gameID" json:"gameID,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *LobbyJoinRequest) Reset()                    { *m = LobbyJoinRequest{} }
func (m *LobbyJoinRequest) String() string            { return proto.CompactTextString(m) }
func (*LobbyJoinRequest) ProtoMessage()               {}
func (*LobbyJoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Upstream struct {
	LobbyJoinRequest *LobbyJoinRequest `protobuf:"bytes,1,opt,name=lobbyJoinRequest" json:"lobbyJoinRequest,omitempty"`
}

func (m *Upstream) Reset()                    { *m = Upstream{} }
func (m *Upstream) String() string            { return proto.CompactTextString(m) }
func (*Upstream) ProtoMessage()               {}
func (*Upstream) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Upstream) GetLobbyJoinRequest() *LobbyJoinRequest {
	if m != nil {
		return m.LobbyJoinRequest
	}
	return nil
}

func init() {
	proto.RegisterType((*LobbyJoinRequest)(nil), "seprotocol.LobbyJoinRequest")
	proto.RegisterType((*Upstream)(nil), "seprotocol.upstream")
}

var fileDescriptor1 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2d, 0x28, 0x2e,
	0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x4e, 0x05, 0x33,
	0x92, 0xf3, 0x73, 0x94, 0x2a, 0xb8, 0x04, 0x7c, 0xf2, 0x93, 0x92, 0x2a, 0xbd, 0xf2, 0x33, 0xf3,
	0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x14, 0xb8, 0xb8, 0xd3, 0x13, 0x73, 0x53, 0xc3,
	0x52, 0x8b, 0x8a, 0x33, 0xf3, 0xf3, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90, 0x85, 0x84,
	0xc4, 0xb8, 0xd8, 0x8a, 0x33, 0x32, 0x0b, 0x3c, 0x5d, 0x24, 0x98, 0xc0, 0x92, 0x50, 0x1e, 0x48,
	0x1c, 0xa4, 0x0c, 0x28, 0xce, 0x0c, 0x11, 0x87, 0xf0, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x80, 0x2c,
	0x09, 0x16, 0xb0, 0x28, 0x98, 0xad, 0x14, 0xc2, 0xc5, 0x01, 0x73, 0x97, 0x90, 0x07, 0x97, 0x40,
	0x0e, 0x9a, 0x2b, 0xc0, 0xd6, 0x72, 0x1b, 0xc9, 0xe8, 0x21, 0x1c, 0xab, 0x87, 0xee, 0xd2, 0x20,
	0x0c, 0x5d, 0x49, 0x6c, 0x60, 0xc5, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x86, 0x24,
	0x05, 0xf4, 0x00, 0x00, 0x00,
}
